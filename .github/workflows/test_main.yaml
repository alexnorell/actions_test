name: Main Check

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Type "prod" to confirm deployment to production'
        required: true
        default: ""

jobs:
  check_if_branch_is_ahead_of_main:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'prod' }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current branch name
        id: vars
        run: |
          echo "HEAD_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
        shell: bash

      - name: Check if branch is ahead of main
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BASE_BRANCH="main"
          HEAD_BRANCH="${{ env.HEAD_BRANCH }}"

          echo "Comparing '${HEAD_BRANCH}' with '${BASE_BRANCH}'"

          # Fetch the latest commits for both branches
          git fetch origin ${BASE_BRANCH}:${BASE_BRANCH}
          git fetch origin ${HEAD_BRANCH}:${HEAD_BRANCH}

          # Use the GitHub CLI to compare branches
          OUTDATED_STATE=$(gh api \
            --header "Accept: application/vnd.github+json" \
            "/repos/${{ github.repository }}/compare/${BASE_BRANCH}...${HEAD_BRANCH}" \
            --jq '.status | select(. | in("identical", "ahead") | not)')

          if [ -n "${OUTDATED_STATE}" ]; then
            echo "Error: The branch '${HEAD_BRANCH}' is not up to date with '${BASE_BRANCH}'."
            exit 1
          else
            echo "Success: The branch '${HEAD_BRANCH}' is up to date with '${BASE_BRANCH}' or ahead."
          fi
